.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

1. Initialisation de PiDog
=============================

Les fonctionnalit√©s de PiDog sont regroup√©es dans la classe ``Pidog``, dont le prototype est pr√©sent√© ci-dessous.

.. code-block:: python

    Class: Pidog()

    __init__(leg_pins=DEFAULT_LEGS_PINS, 
            head_pins=DEFAULT_HEAD_PINS,
            tail_pin=DEFAULT_TAIL_PIN,
            leg_init_angles=None,
            head_init_angles=None,
            tail_init_angle=None)


PiDog doit √™tre instanci√© de plusieurs mani√®res, comme indiqu√© ci-dessous.

1. Voici les √©tapes les plus simples d'initialisation.

.. code-block:: python

    # Importation de la classe Pidog
    from pidog import Pidog

    # Instanciation d'un Pidog
    my_dog = Pidog()

2. PiDog dispose de 12 servomoteurs, qui peuvent √™tre initialis√©s lors de l'instanciation.

.. code-block:: python

    # Importation de la classe Pidog
    from pidog import Pidog

    # Instanciation d'un Pidog avec des angles de servos personnalis√©s
    my_dog = Pidog(leg_init_angles = [25, 25, -25, -25, 70, -45, -70, 45],
                    head_init_angles = [0, 0, -25],
                    tail_init_angle= [0]
                )

Dans la classe ``Pidog``, les servomoteurs sont divis√©s en trois groupes :

* ``leg_init_angles`` : Dans ce tableau, 8 valeurs d√©finissent les angles des huit servos, contr√¥lant les servos (num√©ros de broche) ``2, 3, 7, 8, 0, 1, 10, 11``. √Ä partir du sch√©ma de d√©ploiement, vous pouvez voir o√π ces servos sont situ√©s.

* ``head_init_angles`` : Ce tableau contient 3 valeurs, correspondant aux servos de direction (yaw), de roulis (roll) et de tangage (pitch) de la t√™te de PiDog (``no. 4, 6, 5``) qui r√©agissent aux mouvements de la t√™te ou aux d√©viations du corps.

* ``tail_init_angle`` : Ce tableau ne contient qu'une seule valeur, d√©di√©e au contr√¥le du servo de la queue, qui est ``9``.

3. ``Pidog`` permet de red√©finir l'ordre des servos lors de l'instanciation si votre configuration est diff√©rente.

.. code-block:: python

    # Importation de la classe Pidog
    from pidog import Pidog

    # Instanciation d'un Pidog avec des broches et des angles de servos personnalis√©s
    my_dog = Pidog(leg_pins=[2, 3, 7, 8, 0, 1, 10, 11], 
                    head_pins=[4, 6, 5],
                    tail_pin=[9],
                    leg_init_angles = [25, 25, -25, -25, 70, -45, -70, 45],
                    head_init_angles = [0, 0, -25],
                    tail_init_angle= [0]
                )