.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

3. Mouvement de la t√™te
===========================

Le contr√¥le des servomoteurs de la t√™te de PiDog est r√©alis√© par les fonctions suivantes :

.. code-block:: python

    Pidog.head_move(target_yrps, roll_comp=0, pitch_comp=0, immediately=True, speed=50)

* ``target_yrps`` : C'est un tableau bidimensionnel compos√© de plusieurs groupes d'angles de 3 servomoteurs (appel√©s groupes d'angles). Ces groupes seront utilis√©s pour contr√¥ler les angles des servos de la t√™te. Si plusieurs groupes d'angles sont d√©finis, ceux qui n'ont pas √©t√© ex√©cut√©s seront stock√©s dans le cache.
* ``roll_comp`` : Compensation angulaire sur l'axe de roulis.
* ``pitch_comp`` : Compensation angulaire sur l'axe de tangage.
* ``immediately`` : Lorsque ce param√®tre est d√©fini sur ``True``, le cache est imm√©diatement vid√© pour ex√©cuter le nouveau groupe d'angles ; si le param√®tre est d√©fini sur ``False``, le nouveau groupe d'angles est ajout√© √† la file d'attente d'ex√©cution.
* ``speed`` : La vitesse d'ex√©cution du groupe d'angles.

**Le contr√¥le des servomoteurs de la t√™te de PiDog comprend √©galement des fonctions de support :**

.. code-block:: python

    Pidog.is_head_done()

D√©termine si toutes les actions de la t√™te dans le cache ont √©t√© ex√©cut√©es.

.. code-block:: python

    Pidog.wait_head_done()

Attend que toutes les actions de la t√™te dans le cache soient ex√©cut√©es.

.. code-block:: python

    Pidog.head_stop()

Efface toutes les actions de la t√™te pr√©sentes dans le cache pour arr√™ter les servomoteurs de la t√™te.


**Voici quelques cas d'utilisation courants :**

1. Hochement de t√™te cinq fois.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    for _ in range(5):
        my_dog.head_move([[0, 0, 30],[0, 0, -30]], speed=80)
        my_dog.wait_head_done()
        time.sleep(0.5)

2. Secouer la t√™te pendant 10 secondes.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    for _ in range(99):
        my_dog.head_move([[30, 0, 0],[-30, 0, 0]], immediately=False, speed=30)

    # maintenir pendant 10 secondes
    time.sleep(10)

    my_dog.head_move([[0, 0, 0]], immediately=True, speed=80)

3. PiDog garde la t√™te horizontale lorsqu'il secoue la t√™te, qu'il soit assis ou en demi-position debout.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    # liste d'actions
    shake_head = [[30, 0, 0],[-30, 0, 0]]
    half_stand_leg = [[45, 10, -45, -10, 45, 10, -45, -10]]
    sit_leg = [[30, 60, -30, -60, 80, -45, -80, 45]]

    while True:
        # secouer la t√™te en demi-position debout
        my_dog.legs_move(half_stand_leg, speed=30)
        for _ in range(5):
            my_dog.head_move(shake_head, pitch_comp=0, speed=50)
        my_dog.wait_head_done()
        time.sleep(0.5)

        # secouer la t√™te en position assise
        my_dog.legs_move(sit_leg, speed=30)
        for _ in range(5):
            my_dog.head_move(shake_head, pitch_comp=-30, speed=50)
        my_dog.wait_head_done()
        time.sleep(0.5)
