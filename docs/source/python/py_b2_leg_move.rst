.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _py_b2_leg_move:

2. Mouvement des pattes
===========================

Les mouvements des pattes de PiDog sont impl√©ment√©s par les fonctions suivantes.

.. code-block:: python

    Pidog.legs_move(target_angles, immediately=True, speed=50)

* ``target_angles`` : C'est un tableau bidimensionnel compos√© de plusieurs groupes de 8 angles de servomoteurs (appel√©s groupes d'angles). Ces groupes seront utilis√©s pour contr√¥ler les angles des 8 servos des pattes. Si plusieurs groupes d'angles sont d√©finis, ceux qui n'ont pas √©t√© ex√©cut√©s seront stock√©s dans le cache.
* ``immediately`` : Lorsque ce param√®tre est d√©fini sur ``True``, le cache est imm√©diatement vid√© pour ex√©cuter le nouveau groupe d'angles ; si le param√®tre est d√©fini sur ``False``, le nouveau groupe d'angles est ajout√© √† la file d'attente d'ex√©cution.
* ``speed`` : La vitesse √† laquelle le groupe d'angles est ex√©cut√©.

**Quelques utilisations courantes sont list√©es ci-dessous :**

1. Ex√©cution imm√©diate de l'action.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    # demi-position debout
    my_dog.legs_move([[45, 10, -45, -10, 45, 10, -45, -10]], speed=50)   


2. Ajouter des groupes d'angles √† la file d'attente d'ex√©cution.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    # demi-position debout
    my_dog.legs_move([[45, 10, -45, -10, 45, 10, -45, -10]], speed=50)  

    # actions multiples
    my_dog.legs_move([[45, 35, -45, -35, 80, 70, -80, -70],
                        [90, -30, -90, 30, 80, 70, -80, -70],
                        [45, 35, -45, -35, 80, 70, -80, -70]],  immediately=False, speed=30)   

3. Effectuer des r√©p√©titions pendant 10 secondes.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    # demi-position debout
    my_dog.legs_move([[45, 10, -45, -10, 45, 10, -45, -10]], speed=50)  

    # pr√©paration pour les pompes
    my_dog.legs_move([[45, 35, -45, -35, 80, 70, -80, -70]], immediately=False, speed=20)

    # ex√©cution des pompes
    for _ in range(99):
        my_dog.legs_move([[90, -30, -90, 30, 80, 70, -80, -70],
                            [45, 35, -45, -35, 80, 70, -80, -70]],  immediately=False, speed=30)   

    # maintien pendant 10 secondes
    time.sleep(10)

    # arr√™t et demi-position debout
    my_dog.legs_move([[45, 10, -45, -10, 45, 10, -45, -10]], immediately=True, speed=50)  


**Le contr√¥le des pattes de PiDog dispose √©galement des fonctions suivantes, utilisables conjointement :**

.. code-block:: python

    Pidog.is_legs_done()

Cette fonction permet de d√©terminer si les groupes d'angles dans le cache ont √©t√© ex√©cut√©s. Si oui, retourne ``True`` ; sinon, retourne ``False``.

.. code-block:: python

    Pidog.wait_legs_done()

Suspend le programme jusqu'√† ce que les groupes d'angles dans le cache soient ex√©cut√©s.

.. code-block:: python

    Pidog.legs_stop() 

Vide le cache des groupes d'angles.
