.. note::

    Bonjour, bienvenue dans la communautÃ© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profondÃ©ment dans lâ€™univers de Raspberry Pi, Arduino et ESP32 avec dâ€™autres passionnÃ©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : RÃ©solvez les problÃ¨mes aprÃ¨s-vente et relevez les dÃ©fis techniques avec l'aide de notre communautÃ© et de notre Ã©quipe.
    - **Apprendre et partager** : Ã‰changez des astuces et des tutoriels pour amÃ©liorer vos compÃ©tences.
    - **AperÃ§us exclusifs** : BÃ©nÃ©ficiez dâ€™un accÃ¨s anticipÃ© aux annonces de nouveaux produits et Ã  des avant-premiÃ¨res.
    - **RÃ©ductions spÃ©ciales** : Profitez de remises exclusives sur nos produits les plus rÃ©cents.
    - **Promotions festives et concours** : Participez Ã  des concours et Ã  des promotions spÃ©ciales lors des fÃªtes.

    ğŸ‘‰ PrÃªt Ã  explorer et Ã  crÃ©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous dÃ¨s aujourd'hui !

.. _py_servo_adjust:

7. RÃ©glage des Servomoteurs (Important)
===========================================

La plage d'angle du servomoteur est de -90 Ã  90Â°, mais l'angle dÃ©fini en usine est alÃ©atoire : il peut Ãªtre de 0Â°, de 45Â° ou autre. Si nous lâ€™assemblons avec cet angle par dÃ©faut, cela peut entraÃ®ner un comportement chaotique lorsque le robot exÃ©cute le code, voire pire, bloquer le servomoteur et provoquer sa surchauffe.

Nous devons donc rÃ©gler tous les angles des servomoteurs Ã  0Â° avant de les installer, afin que lâ€™angle de chaque servo soit au centre, quelle que soit la direction de rotation.

#. Pour vous assurer que le servomoteur est bien rÃ©glÃ© Ã  0Â°, insÃ©rez d'abord le bras du servomoteur dans l'arbre du servo, puis tournez doucement le bras du servomoteur Ã  diffÃ©rents angles. Ce bras nâ€™est lÃ  que pour vous permettre de visualiser clairement la rotation du servo.

    .. image:: img/servo_arm.png
        :align: center

#. Lancez maintenant ``servo_zeroing.py`` dans le dossier ``examples/``.

    .. raw:: html

        <run></run>

    .. code-block::

        cd ~/pidog/examples
        sudo python3 servo_zeroing.py

    .. note::
        Si une erreur se produit, essayez de rÃ©activer le port I2C du Raspberry Pi, consultez : :ref:`i2c_spi_config`.

#. Ensuite, branchez le cÃ¢ble du servomoteur sur le port P11 comme suit. Vous verrez le bras du servomoteur se dÃ©placer vers une position (il s'agit de la position 0Â°, qui est alÃ©atoire et peut ne pas Ãªtre verticale ou parallÃ¨le).

    .. image:: img/servo_pin11.jpg

#. Retirez maintenant le bras du servomoteur tout en veillant Ã  ce que le cÃ¢ble reste connectÃ©, et ne coupez pas l'alimentation. Continuez ensuite l'assemblage en suivant les instructions du manuel.

.. note::

    * Ne dÃ©branchez pas ce cÃ¢ble de servomoteur avant de l'avoir fixÃ© avec la vis de servo ; vous pourrez le dÃ©brancher aprÃ¨s l'avoir fixÃ©.
    * Ne faites pas tourner le servomoteur lorsqu'il est sous tension pour Ã©viter tout dommage ; si l'axe du servomoteur n'est pas insÃ©rÃ© dans le bon angle, retirez le servo et rÃ©insÃ©rez-le.
    * Avant d'assembler chaque servomoteur, branchez le cÃ¢ble du servomoteur sur la broche PWM et allumez l'alimentation pour rÃ©gler son angle Ã  0Â°.
