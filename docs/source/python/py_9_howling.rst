.. note::

    Â¡Hola! Bienvenido a la comunidad de entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook. SumÃ©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto a otros apasionados.

    **Â¿Por quÃ© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desafÃ­os tÃ©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Preestrenos exclusivos**: ObtÃ©n acceso anticipado a nuevos anuncios de productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos mÃ¡s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones especiales durante las festividades.

    ðŸ‘‰ Â¿Listo para explorar y crear con nosotros? Â¡Haz clic en [|link_sf_facebook|] y Ãºnete hoy mismo!

9. Aullido
==========

Â¡PiDog no es solo un adorable perrito, sino tambiÃ©n un imponente guardiÃ¡n! Â¡Ven a escucharlo aullar!

.. image:: img/py_9.gif

**Ejecutar el CÃ³digo**

.. raw:: html

    <run></run>

.. code-block::

    cd ~/pidog/examples
    sudo python3 9_howling.py

DespuÃ©s de ejecutar el programa, PiDog se sentarÃ¡ en el suelo y comenzarÃ¡ a aullar.


**CÃ³digo**

.. note::
    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el cÃ³digo a continuaciÃ³n. Pero antes de eso, necesitas ir a la ruta del cÃ³digo fuente como ``pidog\examples``. DespuÃ©s de modificar el cÃ³digo, puedes ejecutarlo directamente para ver el efecto.

.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3
    from pidog import Pidog
    from time import sleep
    from preset_actions import howling

    my_dog = Pidog()

    sleep(0.5)


    def main():
        my_dog.do_action('sit', speed=50)
        my_dog.head_move([[0, 0, 0]], pitch_comp=-40, immediately=True, speed=80)
        sleep(0.5)
        while True:
            howling(my_dog)


    if __name__ == "__main__":
        try:
            main()
        except KeyboardInterrupt:
            pass
        except Exception as e:
            print(f"\033[31mERROR: {e}\033[m")
        finally:
            my_dog.close()

