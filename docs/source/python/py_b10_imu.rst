.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez plus profond√©ment dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : B√©n√©ficiez d'un acc√®s anticip√© aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

10. Lecture de l'IMU
========================

Gr√¢ce au module IMU 6-DOF, PiDog peut d√©terminer s'il est sur une pente ou s'il est soulev√©.

Le module IMU 6-DOF est √©quip√© d'un acc√©l√©rom√®tre √† 3 axes et d'un gyroscope √† 3 axes, permettant de mesurer l'acc√©l√©ration et la vitesse angulaire dans trois directions.

.. note::

    Avant d'utiliser le module, assurez-vous qu'il est correctement assembl√©. L'√©tiquette sur le module vous indiquera s'il est invers√©.

**Vous pouvez lire l'acc√©l√©ration avec :**

.. code-block:: python

   ax, ay, az = Pidog.accData

Lorsque PiDog est plac√© √† l'horizontale, l'acc√©l√©ration sur l'axe x (ax) doit √™tre proche de l'acc√©l√©ration de la gravit√© (1g), avec une valeur de -16384.
Les valeurs sur les axes y et z doivent √™tre proches de 0.

**Utilisez la m√©thode suivante pour lire la vitesse angulaire :**

.. code-block:: python

   gx, gy, gz = my_dog.gyroData

Lorsque PiDog est positionn√© √† l'horizontale, les trois valeurs doivent √™tre proches de 0.


**Voici quelques exemples d'utilisation du module 6-DOF :**

1. Lire l'acc√©l√©ration et la vitesse angulaire en temps r√©el.

.. code-block:: python

    from pidog import Pidog
    import time

    my_dog = Pidog()

    my_dog.do_action("pushup", step_count=10, speed=20)

    while True:
        ax, ay, az = my_dog.accData
        gx, gy, gz = my_dog.gyroData
        print(f"accData: {ax/16384:.2f} g ,{ay/16384:.2f} g, {az/16384:.2f} g       gyroData: {gx} ¬∞/s, {gy} ¬∞/s, {gz} ¬∞/s")
        time.sleep(0.2)
        if my_dog.is_legs_done():
            break

    my_dog.stop_and_lie()

    my_dog.close()

2. Calculer l'angle d'inclinaison du corps de PiDog.

.. code-block:: python

    from pidog import Pidog
    import time
    import math

    my_dog = Pidog()

    while True:
        ax, ay, az = my_dog.accData
        body_pitch = math.atan2(ay,ax)/math.pi*180%360-180
        print(f"Body Degree: {body_pitch:.2f} ¬∞" )
        time.sleep(0.2)

    my_dog.close()

3. PiDog garde ses yeux horizontaux tout en s'inclinant.

.. code-block:: python

    from pidog import Pidog
    import time
    import math

    my_dog = Pidog()

    while True:
        ax, ay, az = my_dog.accData
        body_pitch = math.atan2(ay,ax)/math.pi*180%360-180
        my_dog.head_move([[0, 0, 0]], pitch_comp=-body_pitch, speed=80)
        time.sleep(0.2)

    my_dog.close()